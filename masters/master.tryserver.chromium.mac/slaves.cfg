# -*- python -*-
# ex: set syntax=python:
# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# See master.experimental/slaves.cfg for documentation.

def mac():
  cq_slaves = (
      ['vm%d-m4' % i for i in ([213, 256, 257, 258, 902, 903, 1000] +
                               range(277, 300) + range(552, 555) +
                               range(682, 711) + range(860, 870) +
                               range(969, 987))])
  cq_builders = [
      'mac_chromium_compile_dbg_ng',
      'mac_chromium_rel_ng',
  ]

  optional0_slaves = ['vm%d-m4' % i for i in [713, 645, 646, 647, 648]]
  optional0_builders = [
      'mac_chromium_dbg_ng',
      'mac_chromium_gyp_dbg',
      'mac_chromium_gyp_rel',
      'mac_chromium_gn_upload',
      'mac_upload_clang',
      'mac_optional_gpu_tests_rel',
  ]

  optional1_slaves = ['vm723-m4']
  optional1_builders = [
      'mac_nacl_sdk',
      'mac_nacl_sdk_build',
  ]

  optional2_slaves = ['vm1025-m4']
  optional2_builders = [
      'mac_chromium_compile_rel_ng',
      'mac_chromium_variable',
      'mac_chromium_variable_archive',
  ]

  # When adding builders here, make sure there is a maximum of 3 different
  # values for slavebuilddir. Otherwise we'll run out of disk space.
  optional3_slaves = ['build190-m4', 'vm1026-m4', 'vm117-m4']
  optional3_builders =  [
      'mac_chromium_variable_10.10',
      'mac_chromium_variable_10.10_layout',
      'mac_chromium_archive_rel_ng',
      'mac_chromium_asan_rel_ng',
      'mac_chromium_asan_variable',
      'mac_chromium_variable_chrome',
      'mac_chromium_variable_gn',
      'mac_chromium_variable_layout',
  ]

  # Mac 10.11.
  optional4_slaves = ['build417-m4']
  optional4_builders = [
      'mac_chromium_variable_10.11',
      'mac_chromium_variable_10.11_layout',
  ]

  out = []
  out.extend(
    {
      'master': 'TryServerChromiumMac',
      'builder': cq_builders,
      'preferred_builder': cq_builders[i % len(cq_builders)],
      'hostname': slave,
      'os': 'mac',
      'version': '10.9',
      'bits': '64',
      'pool': 'mac_cq',
    } for i, slave in enumerate(cq_slaves)
  )
  out.extend(
    {
      'master': 'TryServerChromiumMac',
      'builder': optional0_builders,
      'hostname': slave,
      'os': 'mac',
      'version': '10.9',
      'bits': '64',
      'pool': 'mac_optional0_dbg',
    } for slave in optional0_slaves
  )
  out.extend(
    {
      'master': 'TryServerChromiumMac',
      'builder': optional1_builders,
      'hostname': slave,
      'os': 'mac',
      'version': '10.9',
      'bits': '64',
      'pool': 'mac_optional1_dbg',
    } for slave in optional1_slaves
  )
  out.extend(
    {
      'master': 'TryServerChromiumMac',
      'builder': optional2_builders,
      'hostname': slave,
      'os': 'mac',
      'version': '10.9',
      'bits': '64',
      'pool': 'mac_optional_rel',
    } for slave in optional2_slaves
  )
  out.extend(
    {
      'master': 'TryServerChromiumMac',
      'builder': ['mac_chromium_10.10_rel_ng'],
      'hostname': slave,
      'os': 'mac',
      'version': '10.10',
      'bits': '64',
      'pool': 'mac_10_10',
    } for slave in ['build%d-m4' % i for i in xrange(158, 167)] +
                   ['build%d-m4' % i for i in xrange(179, 189)]
  )
  out.extend(
    {
      'master': 'TryServerChromiumMac',
      'builder': ['mac_chromium_10.10_macviews'],
      'hostname': slave,
      'os': 'mac',
      'version': '10.10',
      'bits': '64',
      'pool': 'macviews',
    } for slave in ['build416-m4']
  )
  out.extend(
    {
      'master': 'TryServerChromiumMac',
      'builder': optional3_builders,
      'hostname': slave,
      'os': 'mac',
      'version': '10.10',
      'bits': '64',
      'pool': 'mac_optional_10_10',
    } for slave in optional3_slaves
  )
  out.extend(
    {
      'master': 'TryServerChromiumMac',
      'builder': optional4_builders,
      'hostname': slave,
      'os': 'mac',
      'version': '10.11',
      'bits': '64',
      'pool': 'mac_optional_10_11',
    } for slave in optional4_slaves
  )

  return out


def ios():
  # Split by simulator/device because it splits the load evenly.
  cq_builders_dbg = [
    'ios-simulator',
    'ios-simulator-gn',
  ]
  cq_builders_rel = [
    'ios-device',
    'ios-device-gn',
  ]

  # 12 + 1 builders for dbg
  cq_slaves_dbg = (
    ['build%d-m4' % i for i in ([21] + range(418, 426) + range(456, 460))])
  # 7 + 1 builders for rel
  cq_slaves_rel = (
    ['build%d-m4' % i for i in ([73] + range(460, 466) + [496])])

  # 12 slaves each
  cq_slaves_dbg.extend(['vm%s-m4' % i for i in xrange(190, 191)])
  cq_slaves_dbg.extend(['vm%s-m4' % i for i in xrange(671, 678)])
  cq_slaves_dbg.extend(['vm%i-m4' % i for i in xrange(898, 902)])
  cq_slaves_dbg.extend(['vm%i-m4' % i for i in xrange(1069, 1081)])

  compile_slaves_dbg = [
    {
      'master': 'TryServerChromiumMac',
      'builder': cq_builders_dbg,
      'hostname': slave,
      'preferred_builder': cq_builders_dbg[i % len(cq_builders_dbg)],
      'os': 'mac',
      'version': '10.10',
      'pool': 'ios_cq_dbg',
    } for slave in cq_slaves_dbg]

  compile_slaves_rel = [
    {
      'master': 'TryServerChromiumMac',
      'builder': cq_builders_rel,
      'hostname': slave,
      'preferred_builder': cq_builders_rel[i % len(cq_builders_rel)],
      'os': 'mac',
      'version': '10.10',
      'pool': 'ios_cq_rel',
    } for slave in cq_slaves_rel]

  # TODO(lliabraa): Add test_slaves once we're actually running iOS tests on
  # the bots.

  return compile_slaves_dbg + compile_slaves_rel


slaves = mac() + ios()
