# -*- python -*-
# ex: set syntax=python:

# Copyright (c) 2015ls The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# See master.experimental/slaves.cfg for documentation.

slaves = [
  # LINUX
  {
    'master': 'Dartino',
    'builder': ['dartino-linux-release-x86',
                'cross-dartino-linux-arm'],
    'hostname': 'vm105-m3',
    'os': 'linux',
    'version': 'trusty',
    'bits': '64',
  },
  {
    'master': 'Dartino',
    'builder': ['dartino-linux-release-asan-x86'],
    'hostname': 'slave85-c3',
    'os': 'linux',
    'version': 'trusty',
    'bits': '64',
  },
  {
    'master': 'Dartino',
    'builder': ['dartino-linux-debug-asan-x86'],
    'hostname': 'slave86-c3',
    'os': 'linux',
    'version': 'trusty',
    'bits': '64',
  },
  {
    'master': 'Dartino',
    'builder': ['dartino-lk-debug-arm-qemu',
                'dartino-free-rtos'],
    'hostname': 'vm253-m3',
    'os': 'linux',
    'version': 'trusty',
    'bits': '64',
  },
  # LINUX ARM
  {
    'master': 'Dartino',
    'builder': ['target-dartino-linux-release-arm',],
    'hostname': 'build32-b3',
    'os': 'linux',
    'version': 'precise',
    'bits': '32',
  },
  {
    'master': 'Dartino',
    'builder': ['target-dartino-linux-debug-arm'],
    'hostname': 'build33-b3',
    'os': 'linux',
    'version': 'precise',
    'bits': '32',
  },

  # MAC
  {
    'master': 'Dartino',
    'builder': ['dartino-mac-release-asan-x86'],
    'hostname': 'build16-m3',
    'os': 'mac',
    'version': '10.9',
    'bits': '64',
  },
  {
    'master': 'Dartino',
    'builder': ['dartino-mac-release-x64-sdk',],
    'hostname': 'build17-m3',
    'os': 'mac',
    'version': '10.9',
    'bits': '64',
  },
  {
    'master': 'Dartino',
    'builder': ['dartino-mac-debug-asan-x86'],
    'hostname': 'build18-m3',
    'os': 'mac',
    'version': '10.9',
    'bits': '64',
  },
]

def add_dev_channel_builders(slaves):
  for slave in slaves:
    fixed_builders = []
    for builder in slave.get('builder'):
      if 'dartino' in builder:
        for channel in ['', '-dev']:
          fixed_builders.append('%s%s' % (builder, channel))
      else:
        fixed_builders.append(builder)
    slave['builder'] = fixed_builders
  return slaves

slaves = add_dev_channel_builders(slaves)
