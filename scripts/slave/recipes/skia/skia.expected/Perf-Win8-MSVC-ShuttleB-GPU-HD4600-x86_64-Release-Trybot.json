[
  {
    "cmd": [
      "git.bat",
      "remote",
      "set-url",
      "origin",
      "https://skia.googlesource.com/skia.git"
    ],
    "cwd": "[SLAVE_BUILD]\\skia",
    "name": "git remote set-url"
  },
  {
    "cmd": [
      "git.bat",
      "fetch"
    ],
    "cwd": "[SLAVE_BUILD]\\skia",
    "name": "git fetch"
  },
  {
    "cmd": [
      "git.bat",
      "reset",
      "--hard",
      "abc123"
    ],
    "cwd": "[SLAVE_BUILD]\\skia",
    "name": "git reset"
  },
  {
    "cmd": [
      "git.bat",
      "clean",
      "-d",
      "-f"
    ],
    "cwd": "[SLAVE_BUILD]\\skia",
    "name": "git clean"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_PACKAGE_REPO[depot_tools]\\gclient.py",
      "config",
      "--spec",
      "cache_dir = '[GIT_CACHE]'\nsolutions = [{'deps_file': 'DEPS', 'managed': False, 'name': 'skia', 'url': 'https://skia.googlesource.com/skia.git'}]\ntarget_os = ['llvm']"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "%(PATH)s;RECIPE_PACKAGE_REPO[depot_tools]"
    },
    "name": "gclient setup"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]\\scripts\\slave\\gclient_safe_revert.py",
      ".",
      "[DEPOT_TOOLS]\\gclient.bat"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "gclient revert"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_PACKAGE_REPO[depot_tools]\\gclient.py",
      "sync",
      "--nohooks",
      "--force",
      "--verbose",
      "--delete_unversioned_trees",
      "--revision",
      "skia@abc123",
      "--output-json",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "%(PATH)s;RECIPE_PACKAGE_REPO[depot_tools]"
    },
    "name": "gclient sync",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"solutions\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"skia/\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": 164710@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@SET_BUILD_PROPERTY@got_revision@164710@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]\\apply_issue.py",
      "-r",
      "[SLAVE_BUILD]\\skia",
      "-i",
      "500",
      "-p",
      "1",
      "-s",
      "https://codereview.chromium.org",
      "--no-auth"
    ],
    "name": "apply_issue",
    "~followup_annotations": [
      "@@@STEP_LINK@Applied issue 500@https://codereview.chromium.org/500@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]\\skia\\tools\\buildbot_spec.py",
      "/path/to/tmp/json",
      "Perf-Win8-MSVC-ShuttleB-GPU-HD4600-x86_64-Release-Trybot"
    ],
    "cwd": "[SLAVE_BUILD]\\skia",
    "name": "exec buildbot_spec.py",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"build_targets\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    \"nanobench\"@@@",
      "@@@STEP_LOG_LINE@json.output@  ], @@@",
      "@@@STEP_LOG_LINE@json.output@  \"builder_cfg\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"arch\": \"x86_64\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"compiler\": \"MSVC\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"configuration\": \"Release\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"cpu_or_gpu\": \"GPU\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"cpu_or_gpu_value\": \"HD4600\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"is_trybot\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"model\": \"ShuttleB\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"os\": \"Win8\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"role\": \"Perf\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"configuration\": \"Release_x64\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"dm_flags\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    \"--dummy-flags\"@@@",
      "@@@STEP_LOG_LINE@json.output@  ], @@@",
      "@@@STEP_LOG_LINE@json.output@  \"do_perf_steps\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"do_test_steps\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"env\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"GYP_DEFINES\": \"qt_sdk=C:/Qt/Qt5.1.0/5.1.0/msvc2012_64/ skia_arch_type=x86_64 skia_dump_stats=1 skia_warnings_as_errors=0 skia_win_debuggers_path=c:/DbgHelp\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"nanobench_flags\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    \"--dummy-flags\"@@@",
      "@@@STEP_LOG_LINE@json.output@  ], @@@",
      "@@@STEP_LOG_LINE@json.output@  \"upload_dm_results\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"upload_perf_results\": true@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[SLAVE_BUILD]\\skia\\infra\\bots\\win_toolchain_hash.json",
      "/path/to/tmp/"
    ],
    "name": "Read win_toolchain_hash.json"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport sys, os\npath = sys.argv[1]\nmode = int(sys.argv[2])\nif not os.path.isdir(path):\n  if os.path.exists(path):\n    print \"%s exists but is not a dir\" % path\n    sys.exit(1)\n  os.makedirs(path, mode)\n",
      "[SLAVE_BUILD]\\tmp",
      "511"
    ],
    "name": "makedirs tmp_dir",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@mode = int(sys.argv[2])@@@",
      "@@@STEP_LOG_LINE@python.inline@if not os.path.isdir(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@  if os.path.exists(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@    print \"%s exists but is not a dir\" % path@@@",
      "@@@STEP_LOG_LINE@python.inline@    sys.exit(1)@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.makedirs(path, mode)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[SLAVE_BUILD]\\tmp\\WIN_TOOLCHAIN_HASH",
      "/path/to/tmp/"
    ],
    "name": "Get downloaded WIN_TOOLCHAIN_HASH",
    "~followup_annotations": [
      "step returned non-zero exit code: 1",
      "@@@STEP_EXCEPTION@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport os, sys\nfrom common import chromium_utils # Error? See https://crbug.com/584783.\n\n\nif os.path.exists(sys.argv[1]):\n  chromium_utils.RemoveDirectory(sys.argv[1])\n",
      "[SLAVE_BUILD]\\win"
    ],
    "name": "rmtree win",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import os, sys@@@",
      "@@@STEP_LOG_LINE@python.inline@from common import chromium_utils # Error? See https://crbug.com/584783.@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@if os.path.exists(sys.argv[1]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  chromium_utils.RemoveDirectory(sys.argv[1])@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "RECIPE_PACKAGE_REPO[depot_tools]\\bootstrap\\win\\win_tools.bat"
    ],
    "cwd": "RECIPE_PACKAGE_REPO[depot_tools]",
    "name": "ensure git tooling on windows"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[depot_tools::git]\\resources\\git_setup.py",
      "--path",
      "[SLAVE_BUILD]\\swarming.client",
      "--url",
      "https://chromium.googlesource.com/external/swarming.client.git",
      "--git_cmd_path",
      "RECIPE_PACKAGE_REPO[depot_tools]\\git.bat"
    ],
    "name": "git setup (swarming_client)"
  },
  {
    "cmd": [
      "RECIPE_PACKAGE_REPO[depot_tools]\\git.bat",
      "retry",
      "fetch",
      "origin",
      "master"
    ],
    "cwd": "[SLAVE_BUILD]\\swarming.client",
    "name": "git fetch (swarming_client)"
  },
  {
    "cmd": [
      "RECIPE_PACKAGE_REPO[depot_tools]\\git.bat",
      "checkout",
      "-f",
      "FETCH_HEAD"
    ],
    "cwd": "[SLAVE_BUILD]\\swarming.client",
    "name": "git checkout (swarming_client)"
  },
  {
    "cmd": [
      "RECIPE_PACKAGE_REPO[depot_tools]\\git.bat",
      "rev-parse",
      "HEAD"
    ],
    "cwd": "[SLAVE_BUILD]\\swarming.client",
    "name": "read revision",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@STEP_TEXT@<br/>checked out 'deadbeef'<br/>@@@"
    ]
  },
  {
    "cmd": [
      "RECIPE_PACKAGE_REPO[depot_tools]\\git.bat",
      "clean",
      "-f",
      "-d",
      "-x"
    ],
    "cwd": "[SLAVE_BUILD]\\swarming.client",
    "name": "git clean (swarming_client)"
  },
  {
    "cmd": [
      "RECIPE_PACKAGE_REPO[depot_tools]\\git.bat",
      "submodule",
      "sync"
    ],
    "cwd": "[SLAVE_BUILD]\\swarming.client",
    "name": "submodule sync (swarming_client)"
  },
  {
    "cmd": [
      "RECIPE_PACKAGE_REPO[depot_tools]\\git.bat",
      "submodule",
      "update",
      "--init",
      "--recursive"
    ],
    "cwd": "[SLAVE_BUILD]\\swarming.client",
    "name": "submodule update (swarming_client)"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]\\swarming.client\\swarming.py",
      "--version"
    ],
    "name": "swarming.py --version",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@STEP_TEXT@0.4.10@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]\\swarming.client\\isolateserver.py",
      "download",
      "-I",
      "https://isolateserver.appspot.com",
      "-s",
      "38380d77eec9164e5818ae45e2915a6f22d60e85",
      "-t",
      "[SLAVE_BUILD]\\win",
      "--cache",
      "[HOME]\\.isolate_cache"
    ],
    "name": "Download Win Toolchain"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]\\skia\\infra\\bots\\bootstrap_win_toolchain_json.py",
      "--win_toolchain_json",
      "[SLAVE_BUILD]\\win\\src\\build\\win_toolchain.json",
      "--depot_tools_parent_dir",
      "[SLAVE_BUILD]\\win"
    ],
    "name": "Bootstrap Win Toolchain"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "38380d77eec9164e5818ae45e2915a6f22d60e85",
      "[SLAVE_BUILD]\\tmp\\WIN_TOOLCHAIN_HASH"
    ],
    "name": "write WIN_TOOLCHAIN_HASH"
  },
  {
    "cmd": [
      "python",
      "make.py",
      "nanobench"
    ],
    "cwd": "[SLAVE_BUILD]\\skia",
    "env": {
      "BUILDTYPE": "Release_x64",
      "CHROME_PATH": "[SLAVE_BUILD]\\win\\src",
      "GYP_DEFINES": "qt_sdk=C:/Qt/Qt5.1.0/5.1.0/msvc2012_64/ skia_arch_type=x86_64 skia_dump_stats=1 skia_warnings_as_errors=0 skia_win_debuggers_path=c:/DbgHelp",
      "GYP_MSVS_VERSION": "2015",
      "PATH": "[SLAVE_BUILD]\\win\\depot_tools;%(PATH)s",
      "SKIA_OUT": "[SLAVE_BUILD]\\skia\\out\\Perf-Win8-MSVC-ShuttleB-GPU-HD4600-x86_64-Release-Trybot"
    },
    "name": "build nanobench"
  },
  {
    "cmd": [
      "python",
      "-u",
      "import psutil\nfor p in psutil.process_iter():\n  try:\n    if p.name == 'mspdbsrv.exe':\n      p.kill()\n  except psutil._error.AccessDenied:\n    pass\n"
    ],
    "name": "cleanup",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@import psutil@@@",
      "@@@STEP_LOG_LINE@python.inline@for p in psutil.process_iter():@@@",
      "@@@STEP_LOG_LINE@python.inline@  try:@@@",
      "@@@STEP_LOG_LINE@python.inline@    if p.name == 'mspdbsrv.exe':@@@",
      "@@@STEP_LOG_LINE@python.inline@      p.kill()@@@",
      "@@@STEP_LOG_LINE@python.inline@  except psutil._error.AccessDenied:@@@",
      "@@@STEP_LOG_LINE@python.inline@    pass@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[SLAVE_BUILD]\\tmp\\SKP_VERSION",
      "/path/to/tmp/"
    ],
    "name": "Get downloaded SKP_VERSION"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[SLAVE_BUILD]\\skia\\SKP_VERSION",
      "/path/to/tmp/"
    ],
    "name": "Get expected SKP_VERSION"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[SLAVE_BUILD]\\tmp\\SK_IMAGE_VERSION",
      "/path/to/tmp/"
    ],
    "name": "Get downloaded SK_IMAGE_VERSION"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[SLAVE_BUILD]\\skia\\SK_IMAGE_VERSION",
      "/path/to/tmp/"
    ],
    "name": "Get expected SK_IMAGE_VERSION"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport os, sys\nfrom common import chromium_utils # Error? See https://crbug.com/584783.\n\n\nif os.path.exists(sys.argv[1]):\n  chromium_utils.RemoveDirectory(sys.argv[1])\n",
      "[SLAVE_BUILD]\\perfdata\\Perf-Win8-MSVC-ShuttleB-GPU-HD4600-x86_64-Release-Trybot\\data"
    ],
    "name": "rmtree data",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import os, sys@@@",
      "@@@STEP_LOG_LINE@python.inline@from common import chromium_utils # Error? See https://crbug.com/584783.@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@if os.path.exists(sys.argv[1]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  chromium_utils.RemoveDirectory(sys.argv[1])@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport sys, os\npath = sys.argv[1]\nmode = int(sys.argv[2])\nif not os.path.isdir(path):\n  if os.path.exists(path):\n    print \"%s exists but is not a dir\" % path\n    sys.exit(1)\n  os.makedirs(path, mode)\n",
      "[SLAVE_BUILD]\\perfdata\\Perf-Win8-MSVC-ShuttleB-GPU-HD4600-x86_64-Release-Trybot\\data",
      "511"
    ],
    "name": "makedirs data",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@mode = int(sys.argv[2])@@@",
      "@@@STEP_LOG_LINE@python.inline@if not os.path.isdir(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@  if os.path.exists(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@    print \"%s exists but is not a dir\" % path@@@",
      "@@@STEP_LOG_LINE@python.inline@    sys.exit(1)@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.makedirs(path, mode)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "RECIPE_PACKAGE_REPO[depot_tools]\\git.bat",
      "show",
      "HEAD",
      "--format=%at",
      "-s"
    ],
    "cwd": "[SLAVE_BUILD]\\skia",
    "name": "git show",
    "stdout": "/path/to/tmp/"
  },
  {
    "cmd": [
      "[SLAVE_BUILD]\\skia\\out\\Perf-Win8-MSVC-ShuttleB-GPU-HD4600-x86_64-Release-Trybot\\Release_x64\\nanobench",
      "--undefok",
      "-i",
      "[SLAVE_BUILD]\\skia\\resources",
      "--skps",
      "[SLAVE_BUILD]\\playback\\skps",
      "--images",
      "[SLAVE_BUILD]\\images\\nanobench",
      "--nocpu",
      "--dummy-flags",
      "--outResultsFile",
      "[SLAVE_BUILD]\\perfdata\\Perf-Win8-MSVC-ShuttleB-GPU-HD4600-x86_64-Release-Trybot\\data\\nanobench_164710_1408633190.json",
      "--properties",
      "gitHash",
      "164710",
      "build_number",
      "5",
      "issue",
      "500",
      "patchset",
      "1",
      "--key",
      "arch",
      "x86_64",
      "compiler",
      "MSVC",
      "cpu_or_gpu",
      "GPU",
      "cpu_or_gpu_value",
      "HD4600",
      "model",
      "ShuttleB",
      "os",
      "Win8"
    ],
    "env": {
      "BUILDTYPE": "Release_x64",
      "GYP_DEFINES": "qt_sdk=C:/Qt/Qt5.1.0/5.1.0/msvc2012_64/ skia_arch_type=x86_64 skia_dump_stats=1 skia_warnings_as_errors=0 skia_win_debuggers_path=c:/DbgHelp",
      "SKIA_OUT": "[SLAVE_BUILD]\\skia\\out\\Perf-Win8-MSVC-ShuttleB-GPU-HD4600-x86_64-Release-Trybot"
    },
    "name": "nanobench"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport sys, os\npath = sys.argv[1]\nmode = int(sys.argv[2])\nif not os.path.isdir(path):\n  if os.path.exists(path):\n    print \"%s exists but is not a dir\" % path\n    sys.exit(1)\n  os.makedirs(path, mode)\n",
      "[SLAVE_BUILD]\\perfdata\\Perf-Win8-MSVC-ShuttleB-GPU-HD4600-x86_64-Release-Trybot\\data",
      "511"
    ],
    "name": "makedirs perf_dir",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@mode = int(sys.argv[2])@@@",
      "@@@STEP_LOG_LINE@python.inline@if not os.path.isdir(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@  if os.path.exists(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@    print \"%s exists but is not a dir\" % path@@@",
      "@@@STEP_LOG_LINE@python.inline@    sys.exit(1)@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.makedirs(path, mode)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[build::skia]\\resources\\upload_bench_results.py",
      "Perf-Win8-MSVC-ShuttleB-GPU-HD4600-x86_64-Release-Trybot",
      "5",
      "[SLAVE_BUILD]\\perfdata\\Perf-Win8-MSVC-ShuttleB-GPU-HD4600-x86_64-Release-Trybot\\data",
      "164710",
      "[DEPOT_TOOLS]\\third_party\\gsutil\\gsutil",
      "500"
    ],
    "cwd": "[SLAVE_BUILD]\\skia",
    "env": {
      "AWS_CREDENTIAL_FILE": "[HOME]\\chromium-skia-gm.boto",
      "BOTO_CONFIG": "[HOME]\\chromium-skia-gm.boto",
      "BUILDTYPE": "Release_x64",
      "GYP_DEFINES": "qt_sdk=C:/Qt/Qt5.1.0/5.1.0/msvc2012_64/ skia_arch_type=x86_64 skia_dump_stats=1 skia_warnings_as_errors=0 skia_win_debuggers_path=c:/DbgHelp",
      "SKIA_OUT": "[SLAVE_BUILD]\\skia\\out\\Perf-Win8-MSVC-ShuttleB-GPU-HD4600-x86_64-Release-Trybot"
    },
    "name": "Upload nanobench Results"
  },
  {
    "name": "$result",
    "recipe_result": null,
    "status_code": 0
  }
]