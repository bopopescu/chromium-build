[
  {
    "cmd": [
      "git",
      "remote",
      "set-url",
      "origin",
      "https://skia.googlesource.com/skia.git"
    ],
    "cwd": "[CWD]/skia",
    "name": "git remote set-url"
  },
  {
    "cmd": [
      "git",
      "fetch"
    ],
    "cwd": "[CWD]/skia",
    "name": "git fetch"
  },
  {
    "cmd": [
      "git",
      "reset",
      "--hard",
      "abc123"
    ],
    "cwd": "[CWD]/skia",
    "name": "git reset"
  },
  {
    "cmd": [
      "git",
      "clean",
      "-d",
      "-f"
    ],
    "cwd": "[CWD]/skia",
    "name": "git clean"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_PACKAGE_REPO[depot_tools]/gclient.py",
      "config",
      "--spec",
      "cache_dir = None\nsolutions = [{'deps_file': 'DEPS', 'managed': False, 'name': 'skia', 'url': 'https://skia.googlesource.com/skia.git'}]\ntarget_os = ['llvm']"
    ],
    "env": {
      "PATH": "%(PATH)s:RECIPE_PACKAGE_REPO[depot_tools]"
    },
    "name": "gclient setup"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[ROOT]/b/build/scripts/slave/gclient_safe_revert.py",
      ".",
      "[ROOT]/b/depot_tools/gclient"
    ],
    "name": "gclient revert"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_PACKAGE_REPO[depot_tools]/gclient.py",
      "sync",
      "--nohooks",
      "--force",
      "--verbose",
      "--delete_unversioned_trees",
      "--revision",
      "skia@abc123",
      "--output-json",
      "/path/to/tmp/json"
    ],
    "env": {
      "PATH": "%(PATH)s:RECIPE_PACKAGE_REPO[depot_tools]"
    },
    "name": "gclient sync",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"solutions\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"skia/\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": 164710@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@SET_BUILD_PROPERTY@got_revision@164710@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[ROOT]/b/depot_tools/apply_issue.py",
      "-r",
      "[CWD]/skia",
      "-i",
      "500",
      "-p",
      "1",
      "-s",
      "https://codereview.chromium.org",
      "--no-auth"
    ],
    "name": "apply_issue",
    "~followup_annotations": [
      "@@@STEP_LINK@Applied issue 500@https://codereview.chromium.org/500@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[CWD]/skia/tools/buildbot_spec.py",
      "/path/to/tmp/json",
      "Test-Ubuntu-Clang-GCE-CPU-AVX2-x86_64-Coverage-Trybot"
    ],
    "cwd": "[CWD]/skia",
    "name": "exec buildbot_spec.py",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"build_targets\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    \"dm\"@@@",
      "@@@STEP_LOG_LINE@json.output@  ], @@@",
      "@@@STEP_LOG_LINE@json.output@  \"builder_cfg\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"arch\": \"x86_64\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"compiler\": \"Clang\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"configuration\": \"Coverage\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"cpu_or_gpu\": \"CPU\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"cpu_or_gpu_value\": \"AVX2\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"is_trybot\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"model\": \"GCE\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"os\": \"Ubuntu\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"role\": \"Test\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"configuration\": \"Coverage\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"dm_flags\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    \"--dummy-flags\"@@@",
      "@@@STEP_LOG_LINE@json.output@  ], @@@",
      "@@@STEP_LOG_LINE@json.output@  \"do_compile_steps\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"do_perf_steps\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"do_test_steps\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"env\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"CC\": \"/usr/bin/clang-3.6\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"CXX\": \"/usr/bin/clang++-3.6\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"GYP_DEFINES\": \"skia_arch_type=x86_64 skia_clang_build=1 skia_gpu=0 skia_warnings_as_errors=0\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"nanobench_flags\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    \"--dummy-flags\"@@@",
      "@@@STEP_LOG_LINE@json.output@  ], @@@",
      "@@@STEP_LOG_LINE@json.output@  \"upload_dm_results\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"upload_perf_results\": false@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[depot_tools::git]/resources/git_setup.py",
      "--path",
      "[CWD]/swarming.client",
      "--url",
      "https://chromium.googlesource.com/external/swarming.client.git"
    ],
    "name": "git setup (swarming_client)"
  },
  {
    "cmd": [
      "git",
      "retry",
      "fetch",
      "origin",
      "master"
    ],
    "cwd": "[CWD]/swarming.client",
    "name": "git fetch (swarming_client)"
  },
  {
    "cmd": [
      "git",
      "checkout",
      "-f",
      "FETCH_HEAD"
    ],
    "cwd": "[CWD]/swarming.client",
    "name": "git checkout (swarming_client)"
  },
  {
    "cmd": [
      "git",
      "rev-parse",
      "HEAD"
    ],
    "cwd": "[CWD]/swarming.client",
    "name": "read revision",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@STEP_TEXT@<br/>checked out 'deadbeef'<br/>@@@"
    ]
  },
  {
    "cmd": [
      "git",
      "clean",
      "-f",
      "-d",
      "-x"
    ],
    "cwd": "[CWD]/swarming.client",
    "name": "git clean (swarming_client)"
  },
  {
    "cmd": [
      "git",
      "submodule",
      "sync"
    ],
    "cwd": "[CWD]/swarming.client",
    "name": "submodule sync (swarming_client)"
  },
  {
    "cmd": [
      "git",
      "submodule",
      "update",
      "--init",
      "--recursive"
    ],
    "cwd": "[CWD]/swarming.client",
    "name": "submodule update (swarming_client)"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[CWD]/swarming.client/swarming.py",
      "--version"
    ],
    "name": "swarming.py --version",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@STEP_TEXT@0.4.10@@@"
    ]
  },
  {
    "cmd": [
      "download_from_google_storage",
      "--no_resume",
      "--platform=linux*",
      "--no_auth",
      "--bucket",
      "chromium-luci",
      "-d",
      "[CWD]/skia/infra/bots/tools/luci-go/linux64"
    ],
    "name": "download luci-go linux"
  },
  {
    "cmd": [
      "download_from_google_storage",
      "--no_resume",
      "--platform=darwin",
      "--no_auth",
      "--bucket",
      "chromium-luci",
      "-d",
      "[CWD]/skia/infra/bots/tools/luci-go/mac64"
    ],
    "name": "download luci-go mac"
  },
  {
    "cmd": [
      "download_from_google_storage",
      "--no_resume",
      "--platform=win32",
      "--no_auth",
      "--bucket",
      "chromium-luci",
      "-d",
      "[CWD]/skia/infra/bots/tools/luci-go/win64"
    ],
    "name": "download luci-go win"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport os, sys\nfrom common import chromium_utils # Error? See https://crbug.com/584783.\n\n\nif os.path.exists(sys.argv[1]):\n  chromium_utils.RemoveDirectory(sys.argv[1])\n",
      "[CWD]/luci-go"
    ],
    "name": "rmtree Go binary dir",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import os, sys@@@",
      "@@@STEP_LOG_LINE@python.inline@from common import chromium_utils # Error? See https://crbug.com/584783.@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@if os.path.exists(sys.argv[1]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  chromium_utils.RemoveDirectory(sys.argv[1])@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copytree(sys.argv[1], sys.argv[2], symlinks=bool(sys.argv[3]))\n",
      "[CWD]/skia/infra/bots/tools/luci-go",
      "[CWD]/luci-go",
      "0"
    ],
    "name": "Copy Go binary"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport sys, os\npath = sys.argv[1]\nmode = int(sys.argv[2])\nif not os.path.isdir(path):\n  if os.path.exists(path):\n    print \"%s exists but is not a dir\" % path\n    sys.exit(1)\n  os.makedirs(path, mode)\n",
      "[ROOT]/b/build/third_party/infra",
      "511"
    ],
    "name": "makedirs third_party_infra",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@mode = int(sys.argv[2])@@@",
      "@@@STEP_LOG_LINE@python.inline@if not os.path.isdir(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@  if os.path.exists(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@    print \"%s exists but is not a dir\" % path@@@",
      "@@@STEP_LOG_LINE@python.inline@    sys.exit(1)@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.makedirs(path, mode)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport sys, os\npath = sys.argv[1]\nmode = int(sys.argv[2])\nif not os.path.isdir(path):\n  if os.path.exists(path):\n    print \"%s exists but is not a dir\" % path\n    sys.exit(1)\n  os.makedirs(path, mode)\n",
      "[CWD]/swarming_temp_dir",
      "511"
    ],
    "name": "makedirs swarming tmp dir",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@mode = int(sys.argv[2])@@@",
      "@@@STEP_LOG_LINE@python.inline@if not os.path.isdir(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@  if os.path.exists(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@    print \"%s exists but is not a dir\" % path@@@",
      "@@@STEP_LOG_LINE@python.inline@    sys.exit(1)@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.makedirs(path, mode)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "{\n    \"args\": [\n        \"--isolate\", \n        \"[ROOT]/b/build/scripts/slave/recipes/skia/swarm_recipe.isolate\", \n        \"--isolated\", \n        \"[CWD]/swarming_temp_dir/skia-task-isolate_recipes.isolated\", \n        \"--config-variable\", \n        \"OS\", \n        \"linux\"\n    ], \n    \"dir\": \"[ROOT]/b/build/scripts/slave/recipes/skia\", \n    \"version\": 1\n}",
      "[CWD]/swarming_temp_dir/isolate_recipes.isolated.gen.json"
    ],
    "name": "Write isolate_recipes.isolated.gen.json"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[build::isolate]/resources/isolate.py",
      "[CWD]/swarming.client",
      "batcharchive",
      "--dump-json",
      "/path/to/tmp/json",
      "--isolate-server",
      "https://isolateserver.appspot.com",
      "--verbose",
      "[CWD]/swarming_temp_dir/isolate_recipes.isolated.gen.json"
    ],
    "name": "isolate tests",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"isolate_recipes\": \"[dummy hash for isolate_recipes]\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@SET_BUILD_PROPERTY@swarm_hashes@{\"isolate_recipes\": \"[dummy hash for isolate_recipes]\"}@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport sys, os\npath = sys.argv[1]\nmode = int(sys.argv[2])\nif not os.path.isdir(path):\n  if os.path.exists(path):\n    print \"%s exists but is not a dir\" % path\n    sys.exit(1)\n  os.makedirs(path, mode)\n",
      "[CWD]/tmp",
      "511"
    ],
    "name": "makedirs tmp_dir",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@mode = int(sys.argv[2])@@@",
      "@@@STEP_LOG_LINE@python.inline@if not os.path.isdir(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@  if os.path.exists(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@    print \"%s exists but is not a dir\" % path@@@",
      "@@@STEP_LOG_LINE@python.inline@    sys.exit(1)@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.makedirs(path, mode)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[CWD]/tmp/SKP_VERSION",
      "/path/to/tmp/"
    ],
    "name": "Get downloaded SKP_VERSION"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[CWD]/skia/SKP_VERSION",
      "/path/to/tmp/"
    ],
    "name": "Get expected SKP_VERSION"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[CWD]/tmp/SK_IMAGE_VERSION",
      "/path/to/tmp/"
    ],
    "name": "Get downloaded SK_IMAGE_VERSION"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[CWD]/skia/SK_IMAGE_VERSION",
      "/path/to/tmp/"
    ],
    "name": "Get expected SK_IMAGE_VERSION"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport sys, os\npath = sys.argv[1]\nmode = int(sys.argv[2])\nif not os.path.isdir(path):\n  if os.path.exists(path):\n    print \"%s exists but is not a dir\" % path\n    sys.exit(1)\n  os.makedirs(path, mode)\n",
      "[CWD]/swarming_temp_dir",
      "511"
    ],
    "name": "makedirs swarming tmp dir (2)",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@mode = int(sys.argv[2])@@@",
      "@@@STEP_LOG_LINE@python.inline@if not os.path.isdir(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@  if os.path.exists(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@    print \"%s exists but is not a dir\" % path@@@",
      "@@@STEP_LOG_LINE@python.inline@    sys.exit(1)@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.makedirs(path, mode)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "{\n    \"args\": [\n        \"--isolate\", \n        \"[CWD]/skia/infra/bots/coverage_skia.isolate\", \n        \"--isolated\", \n        \"[CWD]/swarming_temp_dir/skia-task-test_skia.isolated\", \n        \"--config-variable\", \n        \"OS\", \n        \"Ubuntu\", \n        \"--blacklist\", \n        \".git\", \n        \"--blacklist\", \n        \"out\", \n        \"--blacklist\", \n        \"*.pyc\", \n        \"--extra-variable\", \n        \"WORKDIR\", \n        \"[CWD]\", \n        \"--extra-variable\", \n        \"BUILD\", \n        \"[ROOT]/b/build\"\n    ], \n    \"dir\": \"[CWD]\", \n    \"version\": 1\n}",
      "[CWD]/swarming_temp_dir/test_skia.isolated.gen.json"
    ],
    "name": "Write test_skia.isolated.gen.json"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[build::isolate]/resources/isolate.py",
      "[CWD]/swarming.client",
      "batcharchive",
      "--dump-json",
      "/path/to/tmp/json",
      "--isolate-server",
      "https://isolateserver.appspot.com",
      "--verbose",
      "[CWD]/swarming_temp_dir/test_skia.isolated.gen.json"
    ],
    "name": "isolate tests (2)",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"test_skia\": \"[dummy hash for test_skia]\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@SET_BUILD_PROPERTY@swarm_hashes@{\"test_skia\": \"[dummy hash for test_skia]\"}@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport json\nimport sys\nwith open(sys.argv[1]) as f:\n  isolated = json.load(f)\nfor h in sys.argv[2:]:\n  isolated['includes'].append(h)\nwith open(sys.argv[1], 'w') as f:\n  json.dump(isolated, f, sort_keys=True)\n",
      "[CWD]/swarming_temp_dir/skia-task-test_skia.isolated",
      "[dummy hash for isolate_recipes]"
    ],
    "name": "add_isolated_input",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import json@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@with open(sys.argv[1]) as f:@@@",
      "@@@STEP_LOG_LINE@python.inline@  isolated = json.load(f)@@@",
      "@@@STEP_LOG_LINE@python.inline@for h in sys.argv[2:]:@@@",
      "@@@STEP_LOG_LINE@python.inline@  isolated['includes'].append(h)@@@",
      "@@@STEP_LOG_LINE@python.inline@with open(sys.argv[1], 'w') as f:@@@",
      "@@@STEP_LOG_LINE@python.inline@  json.dump(isolated, f, sort_keys=True)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[CWD]/swarming.client/isolateserver.py",
      "archive",
      "--isolate-server",
      "https://isolateserver.appspot.com",
      "[CWD]/swarming_temp_dir/skia-task-test_skia.isolated"
    ],
    "name": "upload new .isolated file for test_skia",
    "stdout": "/path/to/tmp/"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[CWD]/swarming.client/swarming.py",
      "trigger",
      "--swarming",
      "https://chromium-swarm.appspot.com",
      "--isolate-server",
      "https://isolateserver.appspot.com",
      "--priority",
      "90",
      "--shards",
      "1",
      "--task-name",
      "test_skia/Ubuntu/def456/Test-Ubuntu-Clang-GCE-CPU-AVX2-x86_64-Coverage-Trybot/5",
      "--dump-json",
      "/path/to/tmp/json",
      "--expiration",
      "14400",
      "--io-timeout",
      "1200",
      "--hard-timeout",
      "10800",
      "--dimension",
      "gpu",
      "none",
      "--dimension",
      "os",
      "Ubuntu",
      "--dimension",
      "pool",
      "Skia",
      "--tag",
      "buildername:Test-Ubuntu-Clang-GCE-CPU-AVX2-x86_64-Coverage-Trybot",
      "--tag",
      "buildnumber:5",
      "--tag",
      "data:def456",
      "--tag",
      "master:client.skia",
      "--tag",
      "name:test_skia",
      "--tag",
      "os:Ubuntu",
      "--tag",
      "rietveld:https://codereview.chromium.org/500/#ps1",
      "--tag",
      "slavename:skiabot-linux-swarm-013",
      "--tag",
      "stepname:test_skia on Ubuntu",
      "def456",
      "--",
      "--workdir",
      "../../..",
      "skia/swarm_test",
      "rietveld=https://codereview.chromium.org",
      "buildername=Test-Ubuntu-Clang-GCE-CPU-AVX2-x86_64-Coverage-Trybot",
      "mastername=client.skia",
      "buildnumber=5",
      "slavename=skiabot-linux-swarm-013",
      "reason=Triggered by Skia swarm_trigger Recipe",
      "swarm_out_dir=${ISOLATED_OUTDIR}",
      "patchset=1",
      "issue=500",
      "revision=164710"
    ],
    "name": "[trigger] test_skia on Ubuntu",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"base_task_name\": \"test_skia/Ubuntu/def456/Test-Ubuntu-Clang-GCE-CPU-AVX2-x86_64-Coverage-Trybot/5\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"tasks\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"test_skia/Ubuntu/def456/Test-Ubuntu-Clang-GCE-CPU-AVX2-x86_64-Coverage-Trybot/5\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"shard_index\": 0, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"task_id\": \"10000\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"view_url\": \"https://chromium-swarm.appspot.com/user/task/10000\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@STEP_LINK@shard #0@https://chromium-swarm.appspot.com/user/task/10000@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport os, sys\nfrom common import chromium_utils # Error? See https://crbug.com/584783.\n\n\nif os.path.exists(sys.argv[1]):\n  chromium_utils.RemoveDirectory(sys.argv[1])\n",
      "[CWD]/swarming_temp_dir/outputs/test_skia"
    ],
    "name": "rmtree results_dir",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import os, sys@@@",
      "@@@STEP_LOG_LINE@python.inline@from common import chromium_utils # Error? See https://crbug.com/584783.@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@if os.path.exists(sys.argv[1]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  chromium_utils.RemoveDirectory(sys.argv[1])@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[CWD]/swarming.client/swarming.py",
      "collect",
      "--swarming",
      "https://chromium-swarm.appspot.com",
      "--decorate",
      "--print-status-updates",
      "--shards",
      "1",
      "test_skia/Ubuntu/def456/Test-Ubuntu-Clang-GCE-CPU-AVX2-x86_64-Coverage-Trybot/5",
      "--task-summary-json",
      "/path/to/tmp/json",
      "--task-output-dir",
      "[CWD]/swarming_temp_dir/outputs/test_skia"
    ],
    "name": "test_skia on Ubuntu",
    "~followup_annotations": [
      "@@@STEP_TEXT@swarming pending 71s@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"shards\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"abandoned_ts\": null, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"bot_id\": \"vm30\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"completed_ts\": \"2014-09-25T01:42:00.123\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"created_ts\": \"2014-09-25T01:41:00.123\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"durations\": [@@@",
      "@@@STEP_LOG_LINE@json.output@        5.7, @@@",
      "@@@STEP_LOG_LINE@json.output@        31.5@@@",
      "@@@STEP_LOG_LINE@json.output@      ], @@@",
      "@@@STEP_LOG_LINE@json.output@      \"exit_codes\": [@@@",
      "@@@STEP_LOG_LINE@json.output@        0, @@@",
      "@@@STEP_LOG_LINE@json.output@        0@@@",
      "@@@STEP_LOG_LINE@json.output@      ], @@@",
      "@@@STEP_LOG_LINE@json.output@      \"failure\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"id\": \"148aa78d7aa0000\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"internal_failure\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"isolated_out\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"isolated\": \"abc123\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"isolatedserver\": \"https://isolateserver.appspot.com\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"namespace\": \"default-gzip\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"view_url\": \"blah\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"modified_ts\": \"2014-09-25 01:42:00\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"name\": \"heartbeat-canary-2014-09-25_01:41:55-os=Windows\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"outputs\": [@@@",
      "@@@STEP_LOG_LINE@json.output@        \"Heart beat succeeded on win32.\\n\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"Foo\"@@@",
      "@@@STEP_LOG_LINE@json.output@      ], @@@",
      "@@@STEP_LOG_LINE@json.output@      \"started_ts\": \"2014-09-25T01:42:11.123\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"state\": 112, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"try_number\": 1, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"user\": \"unknown\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@STEP_LINK@shard #0 isolated out@blah@@@"
    ]
  },
  {
    "cmd": [
      "git",
      "show",
      "HEAD",
      "--format=%at",
      "-s"
    ],
    "cwd": "[CWD]/skia",
    "name": "git show",
    "stdout": "/path/to/tmp/"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[build::gsutil]/resources/gsutil_wrapper.py",
      "--",
      "[ROOT]/b/depot_tools/gsutil.py",
      "----",
      "cp",
      "[CWD]/swarming_temp_dir/outputs/test_skia/0/164710.cov",
      "gs://skia-infra/coverage-raw-v1/trybot/2012/05/14/12/Test-Ubuntu-Clang-GCE-CPU-AVX2-x86_64-Coverage-Trybot/5/500/164710.cov"
    ],
    "env": {
      "AWS_CREDENTIAL_FILE": null,
      "BOTO_CONFIG": null
    },
    "name": "gsutil upload raw coverage data",
    "~followup_annotations": [
      "@@@STEP_LINK@gsutil.upload@https://storage.cloud.google.com/skia-infra/coverage-raw-v1/trybot/2012/05/14/12/Test-Ubuntu-Clang-GCE-CPU-AVX2-x86_64-Coverage-Trybot/5/500/164710.cov@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[CWD]/swarming_temp_dir/outputs/test_skia/0/nanobench_164710.json",
      "[CWD]/swarming_temp_dir/outputs/test_skia/0/nanobench_164710_1408633190.json"
    ],
    "name": "nanobench JSON"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport os\nimport sys\nos.remove(sys.argv[1])\n",
      "[CWD]/swarming_temp_dir/outputs/test_skia/0/nanobench_164710.json"
    ],
    "name": "old nanobench JSON",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import os@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@os.remove(sys.argv[1])@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[build::skia]/resources/upload_bench_results.py",
      "Test-Ubuntu-Clang-GCE-CPU-AVX2-x86_64-Coverage-Trybot",
      "5",
      "[CWD]/swarming_temp_dir/outputs/test_skia/0",
      "164710",
      "[ROOT]/b/depot_tools/third_party/gsutil/gsutil",
      "500"
    ],
    "cwd": "[CWD]/skia",
    "env": {
      "AWS_CREDENTIAL_FILE": "[HOME]/chromium-skia-gm.boto",
      "BOTO_CONFIG": "[HOME]/chromium-skia-gm.boto"
    },
    "name": "upload nanobench coverage results"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[CWD]/swarming_temp_dir/outputs/test_skia/0/coverage_by_line_164710.json",
      "[CWD]/swarming_temp_dir/outputs/test_skia/0/coverage_by_line_164710_1408633190.json"
    ],
    "name": "Line-by-line coverage JSON"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport os\nimport sys\nos.remove(sys.argv[1])\n",
      "[CWD]/swarming_temp_dir/outputs/test_skia/0/coverage_by_line_164710.json"
    ],
    "name": "old line-by-line coverage JSON",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import os@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@os.remove(sys.argv[1])@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[build::gsutil]/resources/gsutil_wrapper.py",
      "--",
      "[ROOT]/b/depot_tools/gsutil.py",
      "----",
      "cp",
      "[CWD]/swarming_temp_dir/outputs/test_skia/0/coverage_by_line_164710_1408633190.json",
      "gs://skia-infra/coverage-json-v1/trybot/2012/05/14/12/Test-Ubuntu-Clang-GCE-CPU-AVX2-x86_64-Coverage-Trybot/5/500/coverage_by_line_164710_1408633190.json"
    ],
    "env": {
      "AWS_CREDENTIAL_FILE": null,
      "BOTO_CONFIG": null
    },
    "name": "gsutil upload line-by-line coverage data",
    "~followup_annotations": [
      "@@@STEP_LINK@gsutil.upload@https://storage.cloud.google.com/skia-infra/coverage-json-v1/trybot/2012/05/14/12/Test-Ubuntu-Clang-GCE-CPU-AVX2-x86_64-Coverage-Trybot/5/500/coverage_by_line_164710_1408633190.json@@@"
    ]
  },
  {
    "name": "$result",
    "recipe_result": null,
    "status_code": 0
  }
]