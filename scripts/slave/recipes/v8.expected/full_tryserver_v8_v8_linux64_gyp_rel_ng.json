[
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[depot_tools::bot_update]/resources/bot_update.py",
      "--spec",
      "cache_dir = '[GIT_CACHE]'\nsolutions = [{'deps_file': '.DEPS.git', 'managed': True, 'name': 'v8', 'url': 'https://chromium.googlesource.com/v8/v8'}]",
      "--patch_root",
      "v8",
      "--revision_mapping_file",
      "{\"v8\": \"got_revision\", \"v8/tools/swarming_client\": \"got_swarming_client_revision\"}",
      "--git-cache-dir",
      "[GIT_CACHE]",
      "--issue",
      "12853011",
      "--patchset",
      "1",
      "--rietveld_server",
      "https://codereview.chromium.org",
      "--output_json",
      "/path/to/tmp/json",
      "--revision",
      "v8@12345",
      "--no_shallow",
      "--output_manifest"
    ],
    "env": {
      "PATH": "%(PATH)s:RECIPE_PACKAGE_REPO[depot_tools]"
    },
    "name": "bot_update",
    "~followup_annotations": [
      "@@@STEP_TEXT@Some step text@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"did_run\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"fixed_revisions\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"v8\": \"12345\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"manifest\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"v8\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/v8.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"f2cbea7e89a45f46819777bb78a1f5bd0241f64c\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"v8/tools/swarming_client\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/v8/tools/swarming_client.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"e4fee0b18f8163be6097c9c571640038896debc4\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_failure\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_root\": \"v8\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"properties\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_revision\": \"f2cbea7e89a45f46819777bb78a1f5bd0241f64c\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_revision_cp\": \"refs/heads/master@{#50110}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_swarming_client_revision\": \"e4fee0b18f8163be6097c9c571640038896debc4\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_swarming_client_revision_cp\": \"refs/heads/master@{#108913}\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"root\": \"v8\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"step_text\": \"Some step text\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@SET_BUILD_PROPERTY@got_revision@\"f2cbea7e89a45f46819777bb78a1f5bd0241f64c\"@@@",
      "@@@SET_BUILD_PROPERTY@got_revision_cp@\"refs/heads/master@{#50110}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_swarming_client_revision_cp@\"refs/heads/master@{#108913}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_swarming_client_revision@\"e4fee0b18f8163be6097c9c571640038896debc4\"@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/v8/tools/swarming_client/swarming.py",
      "--version"
    ],
    "name": "swarming.py --version",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@STEP_TEXT@0.8.6@@@"
    ]
  },
  {
    "cmd": [],
    "name": "ensure_goma"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[depot_tools::cipd]/resources/bootstrap.py",
      "--platform",
      "linux-amd64",
      "--dest-directory",
      "[SLAVE_BUILD]/cipd",
      "--json-output",
      "/path/to/tmp/json"
    ],
    "name": "ensure_goma.install cipd",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_TEXT@cipd instance_id: 40-chars-fake-of-the-package-instance_id@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"executable\": \"[SLAVE_BUILD]/cipd/cipd\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"instance_id\": \"40-chars-fake-of-the-package-instance_id\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/cipd/cipd",
      "ensure",
      "--root",
      "[CACHE]/cipd/goma",
      "--list",
      "infra/tools/cloudtail/linux-amd64 goma_recipe_module\ninfra_internal/goma/client/linux-amd64 release",
      "--json-output",
      "/path/to/tmp/json",
      "--service-account-json",
      "/creds/service_accounts/service-account-goma-client.json"
    ],
    "name": "ensure_goma.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-goma_recipe_modu\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/tools/cloudtail/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-release---------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra_internal/goma/client/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_PACKAGE_REPO[depot_tools]/gclient.py",
      "runhooks"
    ],
    "cwd": "[SLAVE_BUILD]/v8",
    "env": {
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json",
      "GYP_CHROMIUM_NO_ACTION": "1",
      "GYP_DEFINES": "dcheck_always_on=0 fastbuild=1 gomadir='[CACHE]/cipd/goma' target_arch=x64 test_isolation_mode=prepare use_goma=1 v8_target_arch=x64",
      "GYP_GENERATORS": "ninja",
      "PATH": "%(PATH)s:RECIPE_PACKAGE_REPO[depot_tools]"
    },
    "name": "gclient runhooks"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_PACKAGE_REPO[build]/scripts/tools/runit.py",
      "--show-path",
      "python",
      "RECIPE_PACKAGE_REPO[build]/scripts/slave/cleanup_temp.py"
    ],
    "name": "cleanup_temp"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/v8/tools/mb/mb.py",
      "gen",
      "-m",
      "tryserver.v8",
      "-b",
      "v8_linux64_gyp_rel_ng",
      "--config-file",
      "[SLAVE_BUILD]/v8/infra/mb/mb_config.pyl",
      "--goma-dir",
      "[CACHE]/cipd/goma",
      "--gyp-script=gypfiles/gyp_v8",
      "//out/Release"
    ],
    "cwd": "[SLAVE_BUILD]/v8",
    "env": {
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "generate_build_files",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@stdout@some line@@@",
      "@@@STEP_LOG_LINE@stdout@GYP_DEFINES='target_arch=x64 cool_flag=a=1'@@@",
      "@@@STEP_LOG_LINE@stdout@moar@@@",
      "@@@STEP_LOG_END@stdout@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport sys, os\npath = sys.argv[1]\nmode = int(sys.argv[2])\nif not os.path.isdir(path):\n  if os.path.exists(path):\n    print \"%s exists but is not a dir\" % path\n    sys.exit(1)\n  os.makedirs(path, mode)\n",
      "[SLAVE_BUILD]/v8/out/gn",
      "511"
    ],
    "name": "makedirs for peeking gn",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@mode = int(sys.argv[2])@@@",
      "@@@STEP_LOG_LINE@python.inline@if not os.path.isdir(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@  if os.path.exists(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@    print \"%s exists but is not a dir\" % path@@@",
      "@@@STEP_LOG_LINE@python.inline@    sys.exit(1)@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.makedirs(path, mode)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[build::v8]/resources/patch_mb_config.py",
      "[SLAVE_BUILD]/v8/infra/mb/mb_config.pyl",
      "/path/to/tmp/"
    ],
    "name": "patch mb config (fyi)"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/v8/tools/mb/mb.py",
      "gen",
      "-m",
      "tryserver.v8",
      "-b",
      "v8_linux64_gyp_rel_ng",
      "--config-file",
      "[mb config]",
      "--goma-dir",
      "[CACHE]/cipd/goma",
      "[SLAVE_BUILD]/v8/out/gn"
    ],
    "cwd": "[SLAVE_BUILD]/v8",
    "env": {
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "generate_build_files with gn (fyi)"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/v8/tools/gyp_flag_compare.py",
      "[SLAVE_BUILD]/v8/out/gn",
      "[SLAVE_BUILD]/v8/out/Release",
      "all",
      "all"
    ],
    "name": "compare build flags (fyi)"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::shutil]/resources/rmtree.py",
      "[SLAVE_BUILD]/v8/out/gn"
    ],
    "name": "rmtree [SLAVE_BUILD]/v8/out/gn"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport multiprocessing\nimport sys\n\njob_limit = 200\nif sys.platform.startswith('linux'):\n  # Use 80 for linux not to load goma backend.\n  job_limit = 80\n\ntry:\n  jobs = min(job_limit, multiprocessing.cpu_count() * 10)\nexcept NotImplementedError:\n  jobs = 50\n\nprint jobs\n"
    ],
    "name": "calculate the number of recommended jobs",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import multiprocessing@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@job_limit = 200@@@",
      "@@@STEP_LOG_LINE@python.inline@if sys.platform.startswith('linux'):@@@",
      "@@@STEP_LOG_LINE@python.inline@  # Use 80 for linux not to load goma backend.@@@",
      "@@@STEP_LOG_LINE@python.inline@  job_limit = 80@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@try:@@@",
      "@@@STEP_LOG_LINE@python.inline@  jobs = min(job_limit, multiprocessing.cpu_count() * 10)@@@",
      "@@@STEP_LOG_LINE@python.inline@except NotImplementedError:@@@",
      "@@@STEP_LOG_LINE@python.inline@  jobs = 50@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@print jobs@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [],
    "name": "preprocess_for_goma"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[CACHE]/cipd/goma/goma_ctl.py",
      "restart"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[GOMA_CACHE]",
      "GOMA_DEPS_CACHE_FILE": "v8_linux64_gyp_rel_ng.gomadeps",
      "GOMA_FAIL_FAST": "true",
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "preprocess_for_goma.start_goma",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "RECIPE_PACKAGE_REPO[depot_tools]/ninja",
      "-w",
      "dupbuild=err",
      "-C",
      "[SLAVE_BUILD]/v8/out/Release",
      "-j",
      "50"
    ],
    "env": {
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "compile"
  },
  {
    "cmd": [],
    "name": "postprocess_for_goma"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[CACHE]/cipd/goma/goma_ctl.py",
      "jsonstatus",
      "[CACHE]/cipd/goma/jsonstatus"
    ],
    "env": {
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "postprocess_for_goma.goma_jsonstatus",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[CACHE]/cipd/goma/goma_ctl.py",
      "stat"
    ],
    "env": {
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "postprocess_for_goma.goma_stat",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[CACHE]/cipd/goma/goma_ctl.py",
      "stop"
    ],
    "env": {
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "postprocess_for_goma.stop_goma",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_PACKAGE_REPO[build]/scripts/slave/upload_goma_logs.py",
      "--upload-compiler-proxy-info",
      "--json-status",
      "[CACHE]/cipd/goma/jsonstatus",
      "--ninja-log-outdir",
      "[SLAVE_BUILD]/v8/out/Release",
      "--ninja-log-compiler",
      "goma",
      "--ninja-log-command",
      "['RECIPE_PACKAGE_REPO[depot_tools]/ninja', '-w', 'dupbuild=err', '-C', '[SLAVE_BUILD]/v8/out/Release', '-j', 50]",
      "--ninja-log-exit-status",
      "0",
      "--buildbot-buildername",
      "v8_linux64_gyp_rel_ng",
      "--buildbot-mastername",
      "tryserver.v8",
      "--buildbot-slavename",
      "TestSlavename"
    ],
    "env": {
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "postprocess_for_goma.upload_log",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[build::isolate]/resources/isolate.py",
      "[SLAVE_BUILD]/v8/tools/swarming_client",
      "batcharchive",
      "--dump-json",
      "/path/to/tmp/json",
      "--isolate-server",
      "https://isolateserver.appspot.com",
      "--verbose",
      "[SLAVE_BUILD]/v8/out/Release/bot_default.isolated.gen.json"
    ],
    "name": "isolate tests",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"bot_default\": \"[dummy hash for bot_default]\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "trigger",
    "trigger_specs": [
      {
        "builder_name": "v8_linux64_gyp_rel_ng_triggered",
        "properties": {
          "category": "cq",
          "issue": 12853011,
          "master": "tryserver.v8",
          "parent_build_environment": {
            "GYP_DEFINES": "target_arch=x64 cool_flag=a=1"
          },
          "parent_got_revision": "f2cbea7e89a45f46819777bb78a1f5bd0241f64c",
          "parent_got_revision_cp": "refs/heads/master@{#50110}",
          "parent_got_swarming_client_revision": "e4fee0b18f8163be6097c9c571640038896debc4",
          "patch_project": "v8",
          "patch_storage": "rietveld",
          "patchset": "1",
          "reason": "CQ",
          "requester": "commit-bot@chromium.org",
          "revision": "12345",
          "rietveld": "https://codereview.chromium.org",
          "swarm_hashes": {
            "bot_default": "[dummy hash for bot_default]"
          }
        }
      }
    ],
    "~followup_annotations": [
      "@@@STEP_TEXT@v8_linux64_gyp_rel_ng_triggered@@@"
    ]
  },
  {
    "name": "$result",
    "recipe_result": null,
    "status_code": 0
  }
]